<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>org.vitalii.fedyk</groupId>
    <artifactId>library-user-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>library-user-service</name>
    <description>library-user-service</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>21</java.version>
        <path-to-user-spec>${project.basedir}/src/main/resources/user-openapi.yaml</path-to-user-spec>
        <path-to-book-spec>${project.basedir}/src/main/resources/book-openapi.yaml</path-to-book-spec>
        <url.book-open-api.yaml>
            https://raw.githubusercontent.com/fedykvitalik2004/library-book-service/main/src/main/resources/book-openapi.yaml
        </url.book-open-api.yaml>
        <api-package>org.vitalii.fedyk.libraryuserservice</api-package>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <spring-cloud.version>2024.0.0</spring-cloud.version>
        <path-to-notification-async-spec>${project.basedir}/src/main/resources/notification-asyncapi.yaml
        </path-to-notification-async-spec>
        <url.notification-async-api.yaml>
            https://raw.githubusercontent.com/fedykvitalik2004/library-notification-service/main/src/main/resources/notification-asyncapi.yaml
        </url.notification-async-api.yaml>
        <zenwave.version>1.7.0</zenwave.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.18</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.6</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>7.0.4.Final</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>download-openapi</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>curl</executable>
                            <arguments>
                                <argument>-o</argument>
                                <argument>${path-to-book-spec}</argument>
                                <argument>${url.book-open-api.yaml}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-notification-asyncapi</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>curl</executable>
                            <arguments>
                                <argument>-o</argument>
                                <argument>${path-to-notification-async-spec}</argument>
                                <argument>${url.notification-async-api.yaml}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.10.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <id>generate-user-api</id>
                        <configuration>
                            <inputSpec>${path-to-user-spec}</inputSpec>
                            <generatorName>spring</generatorName>
                            <library>spring-boot</library>
                            <generateApis>true</generateApis>
                            <generateModels>true</generateModels>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useBeanValidation>true</useBeanValidation>
                                <performBeanValidation>true</performBeanValidation>
                                <modelPackage>${api-package}.dto</modelPackage>
                                <apiPackage>${api-package}.controller</apiPackage>
                                <useJakartaEe>true</useJakartaEe>
                                <useSpringBoot3>true</useSpringBoot3>
                                <sourceFolder>/src/main/java</sourceFolder>
                                <implFolder>/src/main/java</implFolder>
                                <serializableModel>true</serializableModel>
                                <useResponseEntity>false</useResponseEntity>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>OffsetDateTime=java.time.ZonedDateTime</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <id>generate-book-api</id>
                        <configuration>
                            <generatorName>java</generatorName>
                            <library>resttemplate</library>
                            <inputSpec>${path-to-book-spec}</inputSpec>
                            <output>${project.build.directory}/generated-sources/openapi</output>
                            <apiPackage>${api-package}.client</apiPackage>
                            <modelPackage>${api-package}.dto</modelPackage>
                            <generateApis>true</generateApis>
                            <generateModels>true</generateModels>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <configOptions>
                                <serializableModel>true</serializableModel>
                                <useJakartaEe>true</useJakartaEe>
                            </configOptions>
                            <additionalProperties>
                                <skipModels>false</skipModels>
                                <skipApis>false</skipApis>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.github.zenwave360.zenwave-sdk</groupId>
                <artifactId>zenwave-sdk-maven-plugin</artifactId>
                <version>${zenwave.version}</version>
                <configuration>
                    <addCompileSourceRoot>true</addCompileSourceRoot>
                    <addTestCompileSourceRoot>true</addTestCompileSourceRoot>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-asyncapi-dtos</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>jsonschema2pojo</generatorName>
                            <inputSpec>${path-to-notification-async-spec}</inputSpec>
                            <configOptions>
                                <modelPackage>${api-package}.dto</modelPackage>
                                <jsonschema2pojo.useJakartaValidation>true</jsonschema2pojo.useJakartaValidation>
                                <jsonschema2pojo.includeJsr303Annotations>false
                                </jsonschema2pojo.includeJsr303Annotations>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-asyncapi-producer</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>spring-cloud-streams3</generatorName>
                            <inputSpec>${path-to-notification-async-spec}</inputSpec>
                            <configOptions>
                                <operationIds>onUserRegistrationNotification</operationIds>
                                <role>provider</role>
                                <style>imperative</style>
                                <apiPackage>${api-package}.producer</apiPackage>
                                <modelPackage>${api-package}.dto</modelPackage>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
                        <artifactId>asyncapi-spring-cloud-streams3</artifactId>
                        <version>${zenwave.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
                        <artifactId>asyncapi-jsonschema2pojo</artifactId>
                        <version>${zenwave.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>